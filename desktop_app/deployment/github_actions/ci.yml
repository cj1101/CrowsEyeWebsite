name: Crow's Eye CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0 libxcb-xinerama0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r deployment/requirements.txt
        pip install pytest pytest-cov
    
    - name: Run unit tests
      run: |
        python -m pytest tests/unit/ -v --cov=src
    
    - name: Run integration tests
      run: |
        python tests/integration/comprehensive_connection_test.py
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Check code formatting with black
      run: black --check src/
    
    - name: Check import sorting with isort
      run: isort --check-only src/
    
    - name: Run type checking with mypy
      run: mypy src/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run bandit security linter
      run: bandit -r src/ -f json -o bandit-report.json
    
    - name: Check dependencies for security vulnerabilities
      run: safety check --json --output safety-report.json

  build:
    needs: [test, lint, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -f deployment/Dockerfile -t crow-eye-marketing:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm crow-eye-marketing:latest python -c "import src.core.app; print('Build successful!')" 
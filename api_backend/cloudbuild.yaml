steps:
# 1. Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/crows-eye-website/crows-eye-api-repo/crows-eye-api:latest', '.']

# 2. Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/crows-eye-website/crows-eye-api-repo/crows-eye-api:latest']

# 3. Deploy container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'crows-eye-api' # This will be the name of your service
    - '--image=us-central1-docker.pkg.dev/crows-eye-website/crows-eye-api-repo/crows-eye-api:latest'
    - '--region=us-central1'
    - '--platform=managed'
    - '--allow-unauthenticated' # Allows public access to the API
    - '--add-cloudsql-instances=crows-eye-website:us-central1:crows-eye'
    - '--set-env-vars=DATABASE_URL=postgresql+asyncpg://<crows_eye_api_user>:<Sunf1re!!>@/<crows_eye_api_db>?host=/cloudsql/crows-eye-website:us-central1:crows-eye'
    - '--set-env-vars=^##^JWT_SECRET_KEY=<ab4e0fa9bce9d2ebec46061c1b9d7924ace20c6d5cd47a0c64593fdb12d0c6f4>##GOOGLE_API_KEY=<AIzaSyCSRMv6JL0DWJqTUdeOo_LWfeRzRV8RnNg>##GEMINI_API_KEY=<AIzaSyARQhyKXzTvCzUEOL7hBOo691w5BDUarfU>'
    - '--verbosity=debug'

# Set the pushed image as the final artifact
images:
- 'us-central1-docker.pkg.dev/crows-eye-website/crows-eye-api-repo/crows-eye-api:latest'

options:
  logging: CLOUD_LOGGING_ONLY 